on:
  push:
    branches:
      - main
      - uat
      - test
      - prod
  pull_request:
    branches:
      - main
      - uat
      - test
      - prod

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker Builder
      uses: docker/setup-buildx-action@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1  # Replace with your region

    - name: Authenticate with AWS ECR
      uses: aws-actions/amazon-ecr-login@v1

        - name: Set Image Tag
        run: echo "IMAGE_TAG=$(date +%s)" >> $GITHUB_ENV

        - name: Set ECR Repository Name
        run: echo "ECR_REPOSITORY=react-app" >> $GITHUB_ENV

        - name: Print Variables
        run: |
            echo "ECR_REPOSITORY: $ECR_REPOSITORY"
            echo "IMAGE_TAG: $IMAGE_TAG"

        - name: Build and Push Image to ECR
        env:
            AWS_REGION: ap-south-1
            ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}  # Use the ECR repository secret if it's configured
        run: |
            echo "Building Docker image with tag $IMAGE_TAG for repository $ECR_REPOSITORY"
            docker build -t $ECR_REPOSITORY:$IMAGE_TAG . || true
            docker images
            docker tag $ECR_REPOSITORY:$IMAGE_TAG 401544946555.dkr.ecr.ap-south-1.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
            docker push 401544946555.dkr.ecr.ap-south-1.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Set Namespace Based on Branch
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/uat" ]]; then
          echo "NAMESPACE=uat" >> $GITHUB_ENV
        elif [[ "${{ github.ref }}" == "refs/heads/test" ]]; then
          echo "NAMESPACE=test" >> $GITHUB_ENV
        elif [[ "${{ github.ref }}" == "refs/heads/prod" ]]; then
          echo "NAMESPACE=prod" >> $GITHUB_ENV
        else
          echo "NAMESPACE=default" >> $GITHUB_ENV
        fi

    - name: Configure Kubernetes Context
      run: |
        echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig.yaml
        export KUBECONFIG=kubeconfig.yaml

    - name: Update Image in Deployment File
      run: |
        sed -i "s|image:.*|image: 401544946555.dkr.ecr.ap-south-1.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG|g" deployment.yaml

    - name: Deploy Application to Kubernetes
      run: |
        kubectl apply -f deployment.yaml -n $NAMESPACE
        kubectl rollout status deployment/react-app -n $NAMESPACE

